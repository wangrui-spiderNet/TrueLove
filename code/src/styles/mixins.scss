@import './variables.scss';

// 单行文本溢出省略号
@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本溢出省略号
@mixin ellipsis-multi($lines) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

// flex布局
@mixin flex($direction: row, $justify: flex-start, $align: center, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 绝对定位居中
@mixin position-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 固定宽高比
@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &:before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }
  
  & > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

// 渐变背景
@mixin gradient-background($direction, $start-color, $end-color) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 多行渐变文本
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// 三角形
@mixin triangle($direction, $size, $color) {
  width: 0;
  height: 0;
  
  @if $direction == top {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  } @else if $direction == bottom {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  }
}

// 阴影效果
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: $box-shadow-light;
  } @else if $level == 2 {
    box-shadow: $box-shadow;
  } @else if $level == 3 {
    box-shadow: $box-shadow-dark;
  }
}

// 过渡效果
@mixin transition($property: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == small {
    @media screen and (max-width: 375px) {
      @content;
    }
  } @else if $breakpoint == medium {
    @media screen and (min-width: 376px) and (max-width: 767px) {
      @content;
    }
  } @else if $breakpoint == large {
    @media screen and (min-width: 768px) {
      @content;
    }
  }
}

// 1px边框（解决高清屏显示问题）
@mixin border-1px($color: $border-color, $direction: all, $radius: 0) {
  position: relative;
  
  @if $direction == all {
    &:after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: 200%;
      height: 200%;
      border: 1px solid $color;
      border-radius: $radius * 2;
      transform-origin: 0 0;
      transform: scale(0.5);
      box-sizing: border-box;
      pointer-events: none;
    }
  } @else if $direction == top {
    &:after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 1px;
      background-color: $color;
      transform-origin: 0 0;
      transform: scaleY(0.5);
    }
  } @else if $direction == bottom {
    &:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 1px;
      background-color: $color;
      transform-origin: 0 100%;
      transform: scaleY(0.5);
    }
  } @else if $direction == left {
    &:after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: 1px;
      height: 100%;
      background-color: $color;
      transform-origin: 0 0;
      transform: scaleX(0.5);
    }
  } @else if $direction == right {
    &:after {
      content: '';
      position: absolute;
      right: 0;
      top: 0;
      width: 1px;
      height: 100%;
      background-color: $color;
      transform-origin: 100% 0;
      transform: scaleX(0.5);
    }
  }
} 